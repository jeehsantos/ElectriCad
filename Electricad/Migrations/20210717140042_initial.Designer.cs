// <auto-generated />
using System;
using Electricad.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Electricad.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210717140042_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Electricad.Data.About", b =>
                {
                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.Property<string>("about_desc")
                        .HasColumnType("text");

                    b.Property<string>("about_file")
                        .HasColumnType("text");

                    b.HasKey("Userid");

                    b.ToTable("tb_about");
                });

            modelBuilder.Entity("Electricad.Data.Offers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("descount")
                        .HasColumnType("int");

                    b.Property<string>("offer_file")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("tb_offers");
                });

            modelBuilder.Entity("Electricad.Data.Portfolio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Sectorsid")
                        .HasColumnType("int");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.Property<string>("port_file")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Sectorsid");

                    b.HasIndex("Userid");

                    b.ToTable("tb_portifolio");
                });

            modelBuilder.Entity("Electricad.Data.Review", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .HasColumnType("text");

                    b.Property<string>("dateComment")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("tb_reviews");
                });

            modelBuilder.Entity("Electricad.Data.Sectors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("desc")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("tb_sectors");
                });

            modelBuilder.Entity("Electricad.Data.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("login")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Electricad.Data.About", b =>
                {
                    b.HasOne("Electricad.Data.User", "User")
                        .WithOne("About")
                        .HasForeignKey("Electricad.Data.About", "Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Electricad.Data.Offers", b =>
                {
                    b.HasOne("Electricad.Data.User", "User")
                        .WithMany("Offers")
                        .HasForeignKey("Userid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Electricad.Data.Portfolio", b =>
                {
                    b.HasOne("Electricad.Data.Sectors", "Sector")
                        .WithMany("Portfolios")
                        .HasForeignKey("Sectorsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Electricad.Data.User", "User")
                        .WithMany("Portifolios")
                        .HasForeignKey("Userid");

                    b.Navigation("Sector");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Electricad.Data.Sectors", b =>
                {
                    b.Navigation("Portfolios");
                });

            modelBuilder.Entity("Electricad.Data.User", b =>
                {
                    b.Navigation("About");

                    b.Navigation("Offers");

                    b.Navigation("Portifolios");
                });
#pragma warning restore 612, 618
        }
    }
}
